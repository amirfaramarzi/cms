/*!
 * @file        bearertoken.hpp
 * @brief       This file is part of the Tegra CMS.
 * @details     Bearertoken interface for apis.
 * @author      <a href='https://www.kambizasadzadeh.com'>Kambiz Asadzadeh</a>
 * @package     The Genyleap
 * @since       29 Aug 2022
 * @copyright   Copyright (c) 2022 The Genyleap. All rights reserved.
 * @license     https://github.com/genyleap/cms/blob/main/LICENSE.md
 *
 */

#ifndef BEARER_TOKEN_ABSTRACT_HPP
#define BEARER_TOKEN_ABSTRACT_HPP

#include "common.hpp"
#include "abstracts/api.hpp"

TEGRA_USING_NAMESPACE Tegra::Types;

TEGRA_NAMESPACE_BEGIN(Tegra::Abstracts::Apis)

/*!
 * \brief The AuthorizationInfo class
 */
struct AuthorizationInfo __tegra_final
{
    OptionalString token;  ///< The bearer token is a cryptic string.
};

/*!
 * \brief HTTP Bearer Authentication
 * Bearer authentication (also called token authentication) is an HTTP authentication scheme that involves security tokens called bearer tokens.
 * The name “Bearer authentication” can be understood as “give access to the bearer of this token.” The bearer token is a cryptic string, usually generated by the server in response to a login request.
 */
class __tegra_export AbstractBearerToken : protected AbstractApi
{
public:
    TEGRA_DEFAULT_INTERFACE_OCTORS(AbstractBearerToken)

    /*!
     * \brief get function will gets output of access string.
     * \returns as final string.
     */
   __tegra_no_discard __tegra_virtual OptionalString get() __tegra_const_noexcept = __tegra_zero;

private:
    TEGRA_DISABLE_COPY(AbstractBearerToken)
};

TEGRA_NAMESPACE_END

#endif  // BEARER_TOKEN_ABSTRACT_HPP
